name: MySQL + Python Container Integration

on:
  push:
    paths:
      - '**.py'
      - '**.yml'
      - 'Dockerfile'
      - 'requirements.txt'

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build and run Docker Compose
        run: docker-compose up --build --abort-on-container-exit

      # ----------------- Kubernetes Starts Below -----------------

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up KinD (Kubernetes in Docker)
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: local-k8s

      - name: Load Docker image into KinD
        run: |
          docker build -t python-mysql-app .
          kind load docker-image python-mysql-app --name local-k8s

      - name: Apply MySQL deployment to K8s
        run: kubectl apply -f mysql-deployement.yaml

      - name: Apply Python app deployment to K8s
        run: kubectl apply -f python-app-deployment.yaml

      - name: Wait for Pods to be Ready
        run: |
          kubectl wait --for=condition=ready pod -l app=mysql --timeout=60s
          kubectl wait --for=condition=ready pod -l app=python-app --timeout=60s

      - name: Print Python app output from Kubernetes pod
        run: |
          echo "üîç Fetching logs from Python app pod..."
          POD_NAME=$(kubectl get pods -l app=python-app -o jsonpath="{.items[0].metadata.name}")
          echo "üìù Logs from pod: $POD_NAME"
          echo "-----------------------------------"
          kubectl logs "$POD_NAME"
          echo "-----------------------------------"
